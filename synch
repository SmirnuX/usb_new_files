#!/bin/bash

_copy(){	#Начало функции (все вынесено в отдельную функцию для реализации рекурсии)
	local begdir=''	#Сохраняем начальную директорию, чтоб вернуться позже
	local i="NULL"
	
	#Считываем названия файлов в массивы:
	cd "$1"
	local fs1=(*)	#!работает только в bash, при переходе в sh надо поменять!
	cd "$2"
	local fs2=(*)
	
	#Вывод списка файлов в директориях:
	echo "Первая директория:"
	for i in ${fs1[@]}
	do
		echo " $i"
	done
	
	echo "Вторая директория:"
	for i in ${fs2[@]}
	do
		echo " $i"
	done
	
	local flag=false
	local j=0
	
	#Копируем все файлы из второй директории, которых нет в первой (или у которых позже дата изменения) в первую
	if [[ ${fs2[@]} == "*" ]]	#Проверка на пустоту
	then
		echo "Вторая директория является пустой."
		#Пропускаем копирование файлов из второй директории (потому что их там нет)
	else
		for i in ${fs1[@]}	#i - файл первой директории, j - номер файла второй директории
		do 
			while true
			do
		    #Проверяем, не вышли ли мы за пределы второй папки
		    if (("$j">="${#fs2[@]}"))
		    then
		      #Заканчиваем
		      flag="true"
		      break
		    fi
		    
		    echo " Сравниваем: $1/$i & $2/${fs2[$j]}"
		    
		    #Сверяем названия файлов
		    if [ "$i" == "${fs2[$j]}" ] 
		    then 
		    	#Проверяем, являются ли копируемые элементы папками или файлами?
		    	if [[ -d "$1/$i" ]] && [[ -d "$2/$i" ]]	#Оба файла - папки
		    	then
		    		echo "  Вложенные папки: $1/$i и $2/$i "
		    		_copy "$1/$i" "$2/$i" #Р Е К У Р С И Я
		    		echo "   Продолжаем работу с $1 и $2"
		      elif ! [[ -d "$1/$i" ]] && ! [[ -d "$2/$i" ]]	#Оба файла - файлы
		      then
			      #Сверяем даты. Если в первой директории более актуальный файл, ничего не делаем, иначе копируем с заменой из второй
			      t1="$(stat -c%Y "$1/$i")"
			      t2="$(stat -c%Y "$2/$i")"
			      echo "  Сверяем даты: $t1 и $t2"
			      if [[ "$t2" > "$t1" ]]	#Если во второй директории файл более актуальный
			      then
			      	echo "Более актуален файл $i во второй директории"
			      	cp -f "$2/$i" "$1"  
			      else
			      	echo "Более актуален файл $i в первой директории"    	
			      fi 
			    else	#Если файл и папка в синхронизируемых директориях имеют одинаковое название - тут 	наши полномочия все
		     		echo "  Встречены файл и папка с одинаковыми названиями: $1/$i и $2/$i. 	Синхронизация остановлена"
			     	exit 1
		    	fi
			    j=$(($j+1))	#Переходим к следующем файлу второй директории
			    break	#и к следующему файлу первой
		    elif [ "$i" \< "${fs2[$j]}" ]	#если название файла во второй директории "больше" чем файла в первой
		    then	
		      break	#Переходим к следующему файлу первой директории
		    else
		      #Данного файла нету в первой директории
	      	echo "  Копируем ${fs2[$j]} в первую"
		      cp -f -r "$2/${fs2[$j]}" "$1"
		      j=$(($j+1))	#Переходим к следующем файлу второй директории
		    fi
		  done
		  
		  if [ "$flag" == "true" ] #Выход из цикла при переборе всей второй директории
		  then
		  	break
		  fi
		done
			
		#Если перебраны не все файлы второй директории
		if [ "$flag" != "true" ]
		then
			while (("$j"<"${#fs2[@]}"))	#Копируем все оставшиеся файлы (которые идут по алфавиту после последнего в первой директории)
			do
				echo "Копируем ${fs2[j]} в первую"
				cp -f -r "$2/${fs2[$j]}" "$1"
				j=$(($j+1))
			done
		fi
	fi
	
	if [[ ${fs1[@]} == "*" ]]
	then
		echo "Первая директория является/являлась пустой."
	else
		#Теперь просто копируем все файлы из изначального списка файлов первой директории во вторую
		for i in ${fs1[@]}
		do
			cp -f -r "$1/$i" "$2"
		done
	fi
}	#Конец функции	


#Сам скрипт
if [ $# != 2 ] #Проверка кол-ва аргументов
then
	echo "Данный скрипт должен принимать два аргумента - два пути к синхронизируемым папкам"
	exit 2
fi

if ! [[ -e "$1" ]] || ! [[ -e "$2" ]]
then
echo "$1"
echo "$2"
	echo "Обоих или одного из каталогов не существует."
	exit 3
fi

_copy $1 $2	#Вызываем нашу функцию

exit 0


